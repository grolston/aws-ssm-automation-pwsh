#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: MIT-0
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy of this
#  software and associated documentation files (the "Software"), to deal in the Software
#  without restriction, including without limitation the rights to use, copy, modify,
#  merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
#  permit persons to whom the Software is furnished to do so.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
#  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
#  PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
#  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
#  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

AWSTemplateFormatVersion: 2010-09-09
Description: Solution that uses SSM Automation to create encrypted snapshots of RDS clusters and then copy those snapshots to a different AWS region for DR purposes.
Parameters: {}

Resources:

  CrossRegionSnapshotCopySSMAutomationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "SSM-Automation-Template-Role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - ssm.amazonaws.com
      Path: "/"
      Policies:
        - PolicyName: "SSM-Automation-Template-Policy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:*"
                Resource: "*"

  rPwshSsmAutomation:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Automation
      Name: !Sub  "Template-${AWS::Region}"
      Content:
        description: Template for Running aws execute script
        schemaVersion: '0.3'
        assumeRole: !GetAtt CrossRegionSnapshotCopySSMAutomationRole.Arn
        parameters:
          InstanceId:
            description: "ID of the Instance."
            type: "String"
          TagKey:
            description: "Enter the Tag Key"
            type: "String"
          TagValue:
            description: "Enter the Tag Value"
            type: "String"
          AutomationAssumeRole:
            default: ""
            description: "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf."
            type: "String"
        mainSteps:
          - name: ExecuteCode
            action: 'aws:executeScript'
            inputs:
              Runtime: PowerShell Core 6.0
              InputPayload:
                instanceId: "{{InstanceId}}"
                tagKey: "{{TagKey}}"
                tagValue: "{{TagValue}}"
              Script: |-
                Install-Module AWS.Tools.EC2 -Force
                Import-Module AWS.Tools.EC2
                $payload = $env:InputPayload | ConvertFrom-Json
                $tag = New-Object Amazon.EC2.Model.Tag
                $tag.Key = $payload.tagKey
                $tag.Value = $payload.tagValue

                New-EC2Tag -Resource $payload.instanceId -Tag $tag


Outputs:
  AutomationDocument:
    Value: !Ref rPwshSsmAutomation
  SSMAutomationRole:
    Value: !Ref CrossRegionSnapshotCopySSMAutomationRole
